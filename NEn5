
      const autoSubmitForms = {
  login: localStorage.autoLogin,
  loginCaptcha: localStorage.captchaautosolve,
  appointmentCaptcha: localStorage.captchaautosolve,
  visaType: localStorage.isEnabled,
  slotSelection: localStorage.getItem('Auto Submit Date Selection'),
  applicantSelection: 'on',
}
      const global = typeof unsafeWindow !== 'undefined' ? unsafeWindow : window;

function random (lower, upper) { return lower + Math.floor(Math.random() * (upper - lower + 1)) }
function shuffleArray (array) {
  let index = -1
  const length = array.length
  const lastIndex = length - 1
  while (++index < length) {
    const rand = random(index, lastIndex)
    ;[array[index], array[rand]] = [array[rand], array[index]]
  }
  return array
}




 
   function removeRandomnessFromUi () {
    // Center main content
    $('#div-main > :is(:first-child, :last-child)').removeClass().hide()
    $('#div-main > :has(form)').addClass('mx-auto')

    // Remove random vertical margin
    $('form > div:nth-child(2)')
      .addClass('gap-4')
      .children('div')
      .removeClass((_, className) => className.match(/m[tb]-\d/g))

    $('div:has(> #btnSubmit)').addClass('mt-5')
  }

  function selectSlot () {
    $(() => {
      const allowedDates = global.availDates.ad.filter(it => it.AppointmentDateType === 0)
      const selectedDate = shuffleArray(allowedDates).at(random(0, allowedDates.length - 1))
      if (selectedDate) {
          const datePicker = $('.k-datepicker:visible .k-input').data('kendoDatePicker')
          datePicker.value(selectedDate.DateText)
          datePicker.trigger('change')
              }
    })
  }

  function getAvailableSlotTimes () {
    const apptDate = $('.k-datepicker:visible .k-input').val()
    const slotDropDown = $('.k-dropdown:visible > .form-control').data('kendoDropDownList')
    if (!apptDate) {
      slotDropDown.value(undefined)
      slotDropDown.setDataSource([])
      // slotDropDown.enable(false)
      return false
    }
    global.ShowLoader()
    const that = this
    $.ajax({
      type: 'POST',
      url: `/MAR/appointment/GetAvailableSlotsByDate?data=${encodeURIComponent(new URLSearchParams(location.search).get('data'))}&appointmentDate=${apptDate}`,
      dataType: 'json',
      success (data) {
        if (data.success) {
          selectSlotTime(global.slotDataSource = data.data)
        } else {
          global.ShowError(data.err)
          data.ru && global.confirm(`You will be redirected to: ${data.ru}`) && global.location.replace(data.ru)
        }
      },
      complete () {
        global.HideLoader()
      }
    })
  }

  function selectSlotTime (slots) {
    const availableSlots = slots.filter(s => s.Count > 0)
    let selectedSlot = shuffleArray(availableSlots).at(random(0, availableSlots.length - 1))
    availableSlots.forEach(s => s.Count > selectedSlot.Count && (selectedSlot = s))
    if (selectedSlot) {
     const voices = window.speechSynthesis.getVoices();
const utterance = new SpeechSynthesisUtterance('Get The Appointnment Slot !!!');

// Select a specific voice
// You can replace the voice name with any available voice in your system
utterance.voice = voices.find(voice => voice.name === 'Google US English' || voice.name === 'Microsoft Zira Desktop');

// Speak with the selected voice
speechSynthesis.speak(utterance);

      const slotDropDown = $('.k-dropdown:visible > .form-control').data('kendoDropDownList')
      slotDropDown.setDataSource(slots)
      slotDropDown.value(selectedSlot.Id)

      ;/on|true/.test(autoSubmitForms?.slotSelection) && $(() => $('#btnSubmit').trigger('click'))
    }
  }

 function start () {
    console.log(`${this.constructor.name} started`)

   removeRandomnessFromUi()
    Object.assign(global, {
      OnAppointmentdateChange: () => getAvailableSlotTimes(),
    })
      if(localStorage.getItem('Auto Select Date') == 'true'){
    selectSlot()}
  }








   start();







